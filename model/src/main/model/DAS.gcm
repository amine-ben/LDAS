index Knowledges: Knowledge using name
index Strategies: Strategy using name
index Natures: Nature using name

const TYPE_NUMERICAL: String = "Type::Numerical"
const TYPE_BOOLEAN: String = "Type::Boolean"
const TYPE_TEXT: String = "Type::Text"
const TYPE_BYTE: String = "Type::Byte"

class Knowledge {
    att name: String

    ref context: Context
    rel strategies: Strategy
    rel requirements: Requirement
    rel decisions: Decision
}

class Decision {
    rel execute: Tactic oppositeOf isExecutedBy
    rel goals: Goal
    rel input: Value oppositeOf inputOf
    rel impact: Value oppositeOf impactedBy
}

// Context mm
class Context {
    att name: String

    rel globals: Attribute
    rel structures: Structure
}

class  Structure {
    att name: String

    rel inner: Structure
    rel properties: Property
    rel values: StructureValue oppositeOf structure
}

class StructureValue {
    ref structure: Structure oppositeOf values
    rel values: Value
}

class Property {
    att name: String
    att isHistoric: Boolean
    att isStatic: Boolean

    rel values: Value oppositeOf valueOf
    rel expected: Value oppositeOf expectedOf

    rel consistentWith: Property oppositeOf isConsistentWith
    rel isConsistentWith: Property oppositeOf consistentWith

    rel computedUsing: Property oppositeOf computationInput
    rel computationInput: Property oppositeOf computedUsing

    rel influence: Property oppositeOf isInfluencedBy
    rel isInfluencedBy: Property oppositeOf influence

    ref source: Source
    rel uncertainty: Uncertainty

    rel values: Value oppositeOf valueOf
    rel expected: Value oppositeOf expectedOf
}

class Attribute extends Property{
    att typeAtt: String
    att isArray: Boolean
}

class Relation extends Property {
    ref opposite: Relation
}


class Value {
    rel inputOf: Decision oppositeOf input
    rel impactedBy: Decision oppositeOf impact

    rel valueOf: Property oppositeOf values
    rel expectedOf: Property oppositeOf expected

    rel uncertainty: Uncertainty
}

class Source {
    att srcType: String
    rel info: Property
}

class Uncertainty {
    att value: Double
}

// Action mm
class Strategy {
    att name: String

    rel tactics: Tactic oppositeOf strategy
}

class Tactic {
    att name: String

    ref strategy: Strategy oppositeOf tactics
    ref condition: Condition
    rel actions: Action

    rel isExecutedBy: Decision oppositeOf execute

}

class Condition {
    rel implement: Goal oppositeOf isImplementedBy
    rel input: Property
}

class Action {
    att name: String
    att status: String

    rel impacted: Value
}


// Requirement mm
class Requirement {
    att name: String

    rel goals: Goal oppositeOf requirement
}

class Nature {
    att name: String
}

class Goal {
    att goal: String
    rel isImplementedBy: Condition oppositeOf implement
    ref requirement: Requirement oppositeOf goals

    ref nature: Nature
}



class Constraint extends Nature {
    ref applyOn: ConstrainedNature
}

class ConstrainedNature extends Nature {}
class Functional extends ConstrainedNature {}
class Performance extends ConstrainedNature {}
class Quality extends ConstrainedNature {}